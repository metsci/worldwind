KNOWN ISSUES FOR THIS RELEASE (7.0.0)
=====================================

 * See also the PLATFORMS.txt file for OS/compiler-specific issues.


Include Paths
-------------

The header files have been moved from "./include/*/*.h" to "./include/*.h".
This change is not reflected in the Porting Guide section of the User Manual.
Existing applications will have to update their include paths accordingly.


Examples
--------

 * The "thumbext" DLL does not properly register under Win64/VC9.  (fb7995)

 * Linking against the Debug/Debug_md libraries (Windows) may produce linker
   warnings for PDB files for the GDAL and Kakadu libraries.  These may be
   safely ignored. [fb165]
 

Command-line Applications
-------------------------

 * The command line applications may handle filenames incorrectly on some
   foreign language systems due to locale issues.  A workaround might be to
   set the environment variable LT_NO_SETLOCALE to the string 'true'.  If this
   variable is set, the application will print "[setlocale() not used]" when
   run.  (Note this problem only affects the demo command line applications,
   not the SDK libraries themselves.) [tt9372]


DLL (Windows only)
------------------

 * There is a known crashing condition when allocating and deallocating DLL
   objects on the heap using new and delete.  A detailed explanation of the
   issue can be found at:

     http://support.microsoft.com/default.aspx?scid=kb;en-us;122675

   We recommend using DLL objects on the stack instead of on the heap, but if
   that is not possible the issue can be worked around by using template
   wrappers for the DLL classes.  See the sample code in ImageInfo.cpp and
   DerivedImageReader.cpp for an example of how to do this. [tt13463/tt14319]


E-SDK and D-SDK
---------------

 * The SDK has the following image data/pixel limitations:
     - only 8-bit and 16-bit unsigned data
         (plus limited 32-bit float support)
         (plus limited 8-bit and 16-bit signed support)
     - all bands must be the same datatype
     - all bands must be the same width and height
   Classes will return failure status codes if these conditions are not met.

 * The error string mechanism is not currently documented and is subject to
   change in future releases.  Contact LizardTech or visit our developer
   webite for current details.


JPEG 2000
---------

 * The J2KImageReader does not yet support all possible Part 1 JP2 encodings.
   In particular, the following limitations are known:
     - lookup tables (palettized images) are not supported
     - advanced use of colorspaces is not supported
     - all components must have the same datatype
     - all components must be sampled at the same rate, i.e. must have
       the same dimensions
   Use of a jp2 image that contains one or more of the above features will
   result in either an error (failure status code) or an incorrectly displayed
   image.  These issues will be resolved in coming releases.

 * The JPEG 2000 writer does not yet support optimization (transcoding).
   This issue will be addressed in coming releases.

