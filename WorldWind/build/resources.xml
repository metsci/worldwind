<!--
  ~ Copyright (C) 2012 United States Government as represented by the Administrator of the
  ~ National Aeronautics and Space Administration.
  ~ All Rights Reserved.
  -->

<!--$Id$-->
<project name="resources">

    <!-- BATIK_HOME environment variable must point to base of Batik installation. -->
    <property environment="env"/>
    <property name="batik.jar" value="${env.BATIK_HOME}/batik-rasterizer.jar"/>

    <property name="rasterize.height" value="128"/>

    <property name="milstd2525.src.dir" location="resources/milstd2525"/>
    <property name="milstd2525.dest.dir" location="resources/milstd2525-png"/>

    <!-- Build all targets. -->
    <target name="resources" depends="resources.milstd2525" description="Builds all resource targets."/>

    <!-- Generate MIL-STD-2525C PNG images from SVG source files. -->
    <target name="resources.milstd2525"
            description="Generate images for MIL-STD-2525C tactical graphics. PNG images are generated from SVG source files."
            depends="resources.milstd2525.tacgrp,
                     resources.milstd2525.metoc,
                     resources.milstd2525.fills"/>

    <!-- Generate MIL-STD-2525C Appendix B. -->
    <target name="resources.milstd2525.tacgrp"
            description="Generate images for MIL-STD-2525C Appendix B."
            depends="imagemagick-check, imagemagick-missing"
            if="imagemagick.available">

        <!-- Rasterize graphics from 2525C Appendix B -->
        <antcall target="rasterize">
            <param name="rasterize.src.dir" value="${milstd2525.src.dir}/tacgrp"/>
            <param name="rasterize.dest.dir" value="${milstd2525.dest.dir}/tacgrp"/>
        </antcall>

        <!-- Trim transparent pixels from the generated graphics -->
        <!-- Invoke ImageMagick mogrify to trim the images. -->
        <apply executable="mogrify" parallel="true">
            <arg value="-trim"/>
            <arg value="+repage"/>

            <fileset dir="${milstd2525.dest.dir}/tacgrp">
                <include name="**/*.png"/>

                <!-- Do not trim the CBRN graphics. These graphics are composed of a fill part and an outline part. The
                     two parts must be exactly the same size, and trimming would make the outline layer a different size
                     than the fill. -->
                <!-- TODO: would be cleaner not to have to special case these graphics. -->
                <exclude name="**/g-m?neb-------x.png"/>
                <exclude name="**/g-m?nec-------x.png"/>
                <exclude name="**/g-m?nz--------x.png"/>
            </fileset>
        </apply>
    </target>

    <!-- Generate MIL-STD-2525C Appendix C. -->
    <target name="resources.milstd2525.metoc"
            description="Generate images for MIL-STD-2525C Appendix C graphics."
            depends="imagemagick-check, imagemagick-missing"
            if="imagemagick.available">

        <!-- Rasterize graphics from 2525C Appendix B -->
        <antcall target="rasterize">
            <param name="rasterize.src.dir" value="${milstd2525.src.dir}/metoc"/>
            <param name="rasterize.dest.dir" value="${milstd2525.dest.dir}/metoc"/>
        </antcall>

        <!-- Trim transparent pixels from the generated graphics -->
        <!-- Invoke ImageMagick mogrify to trim the images. -->
        <apply executable="mogrify" parallel="true">
            <arg value="-trim"/>
            <arg value="+repage"/>

            <fileset dir="${milstd2525.dest.dir}/metoc">
                <include name="**/*.png"/>
            </fileset>
        </apply>
    </target>

    <!-- Generate MIL-STD-2525C fill images. -->
    <target name="resources.milstd2525.fills"
            description="Generate images for MIL-STD-2525C graphic fills.">

        <!-- Rasterize graphics from 2525C Appendix B -->
        <antcall target="rasterize">
            <param name="rasterize.src.dir" value="${milstd2525.src.dir}/fills"/>
            <param name="rasterize.dest.dir" value="${milstd2525.dest.dir}/fills"/>
        </antcall>
    </target>

    <!-- Utility target to rasterize a directory of SVG files to PNG. -->
    <target name="rasterize" if="batik.available"
            description="Rasterize a directory of SVG files to PNG"
            depends="batik-check, batik-missing">

        <!-- Invoke the Batik rasterizer to convert SVG to PNG -->
        <apply executable="java" parallel="true">
            <arg value="-jar"/>
            <arg path="${batik.jar}"/>

            <arg value="-d"/>
            <arg value="${rasterize.dest.dir}"/>

            <!-- Only specify image height. Batik will compute the appropriate width. Specifying the width as well
                 would just cause Batik to add unnecessary whitespace. -->
            <arg value="-h"/>
            <arg value="${rasterize.height}"/>

            <fileset dir="${rasterize.src.dir}">
                <include name="**/*.svg"/>
            </fileset>
        </apply>
    </target>

    <target name="imagemagick-missing" unless="imagemagick.available"
            description="Echo a warning if ImageMagick is not available.">
        <echo level="warning">ImageMagick cannot be found. ImageMagick is available from http://www.imagemagick.org.
        </echo>
    </target>

    <target name="batik-missing" unless="batik.available"
            description="Echo a warning if Batik library is not available.">
        <echo level="warning">Batik SVG rasterization library cannot be found. Set the BATIK_HOME</echo>
        <echo>environment variable to the location of the Batik installation.</echo>
        <echo>Batik is available from http://xmlgraphics.apache.org/batik/.</echo>
    </target>

    <target name="batik-check" description="Determine if Batik image library is available.">
        <available file="${batik.jar}" property="batik.available"/>
    </target>

    <target name="imagemagick-check" description="Determine if ImageMagick is available.">
        <exec executable="mogrify" resultproperty="imagemagick.available" failonerror="false"
              failifexecutionfails="false" logerror="false">
            <arg value="-version"/>
        </exec>
    </target>

    <!-- Individual clean targets corresponding to each build target above. -->
    <target name="clean.resources.milstd2525">
        <delete dir="${milstd2525.dest.dir}"/>
    </target>
    <!-- Main clean target for resource build targets. Removes all files and directories created by all resource build targets. -->
    <target name="clean.resources.all" depends="clean.resources.milstd2525"/>

</project>